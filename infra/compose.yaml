
volumes:
  postgres-order:
  postgres-admin:
  postgres-courier:
  postgres-user:

networks:
  parcel-delivery:
    name: parcel-delivery-network

services:
  nginx:
    image: nginx
    restart: unless-stopped
    ports:
      - "8081:8080"
    volumes:
      - .\conf.nginx:/etc/nginx/nginx.conf:ro
    networks:
      parcel-delivery:

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    restart: unless-stopped
    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "22181:2181"
    networks:
      parcel-delivery:

  # https://github.com/bitnami/bitnami-docker-kafka#how-to-use-this-image - documentation
  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.13-2.8.1
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    networks:
      parcel-delivery:

  postgres-admin:
    container_name: postgres-admin
    image: bitnami/postgresql:14.3.0
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=admin
      - POSTGRES_DB=admin
      - TZ=GMT+2
      - PGTZ=GMT+2
    #      - PGDATA=/data/postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-admin:/data/postgres
    networks:
      parcel-delivery:

  postgres-user:
    container_name: postgres-user
    image: bitnami/postgresql:14.3.0
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=admin
      - POSTGRES_DB=user
      - TZ=GMT+2
      - PGTZ=GMT+2
    #      - PGDATA=/data/postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres-user:/data/postgres
    networks:
      parcel-delivery:

  postgres-order:
    container_name: postgres-order
    image: bitnami/postgresql:14.3.0
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=admin
      - POSTGRES_DB=auction
      - TZ=GMT+2
      - PGTZ=GMT+2
    #      - PGDATA=/data/postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres-order:/data/postgres
    networks:
      parcel-delivery:

  postgres-courier:
    container_name: postgres-courier
    image: bitnami/postgresql:14.3.0
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=admin
      - POSTGRES_DB=auction
      - TZ=GMT+2
      - PGTZ=GMT+2
    #      - PGDATA=/data/postgres
    ports:
      - "5435:5432"
    volumes:
      - postgres-courier:/data/postgres
    networks:
      parcel-delivery:

  admin-service:
    container_name: admin-service
    depends_on:
      - kafka
      - postgres-admin
    build:
      context: ..\adminservice
      dockerfile: Dockerfile
#    ports:
#      - "8001:8001"
    networks:
      parcel-delivery:
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"

  courier-service:
    container_name: courier-service
    depends_on:
      - kafka
      - postgres-courier
    build:
      context: ..\courierservice
      dockerfile: Dockerfile
#    ports:
#      - "8002:8001"
    networks:
      parcel-delivery:
    environment:
      - "SPRING_PROFILES_ACTIVE=prod"
