name: "parcel-delivery"

volumes:
  postgres-order:
  postgres-admin:
  postgres-courier:
  postgres-user:

networks:
  parcelDelivery:

services:
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3.8.0
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "22181:2181"
    networks:
      parcelDelivery:

  kafka:
    container_name: kafka
    image: bitnami/kafka:3.1
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      parcelDelivery:

  postgres-admin:
    container_name: postgres-admin
    image: bitnami/postgresql:14.3.0
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=admin
      - POSTGRES_DB=admin
      - TZ=GMT+2
      - PGTZ=GMT+2
    #      - PGDATA=/data/postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-admin:/data/postgres
    networks:
      parcelDelivery:

  postgres-user:
    container_name: postgres-user
    image: bitnami/postgresql:14.3.0
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=admin
      - POSTGRES_DB=user
      - TZ=GMT+2
      - PGTZ=GMT+2
    #      - PGDATA=/data/postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres-user:/data/postgres
    networks:
      parcelDelivery:

  postgres-order:
    container_name: postgres-order
    image: bitnami/postgresql:14.3.0
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=admin
      - POSTGRES_DB=auction
      - TZ=GMT+2
      - PGTZ=GMT+2
    #      - PGDATA=/data/postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres-order:/data/postgres
    networks:
      parcelDelivery:

  postgres-courier:
    container_name: postgres-courier
    image: bitnami/postgresql:14.3.0
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=admin
      - POSTGRES_DB=auction
      - TZ=GMT+2
      - PGTZ=GMT+2
    #      - PGDATA=/data/postgres
    ports:
      - "5435:5432"
    volumes:
      - postgres-courier:/data/postgres
    networks:
      parcelDelivery:

  admin-service:
    container_name: admin-service
    depends_on:
      - kafka
    build:
      context: ..\adminservice
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    networks:
      parcelDelivery:

  courier-service:
    container_name: courier-service
    depends_on:
      - kafka
    build:
      context: ..\courierservice
      dockerfile: Dockerfile
    ports:
      - "8002:8001"
    networks:
      parcelDelivery:
