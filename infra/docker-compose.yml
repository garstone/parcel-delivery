name: "parcel-delivery"

volumes:
  postgres-order:
  postgres-admin:
  postgres-courier:
  postgres-user:

networks:
  parcelDelivery:

services:
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3.8.0
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    networks:
      parcelDelivery:

  # https://github.com/bitnami/bitnami-docker-kafka#how-to-use-this-image - documentation
  kafka:
    container_name: kafka
    image: bitnami/kafka:3.1
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      parcelDelivery:

  postgres-admin:
    container_name: postgres-admin
    image: bitnami/postgresql:14.3.0
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=admin
      - POSTGRES_DB=admin
      - TZ=GMT+2
      - PGTZ=GMT+2
    #      - PGDATA=/data/postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-admin:/data/postgres
    networks:
      parcelDelivery:

  postgres-user:
    container_name: postgres-user
    image: bitnami/postgresql:14.3.0
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=admin
      - POSTGRES_DB=user
      - TZ=GMT+2
      - PGTZ=GMT+2
    #      - PGDATA=/data/postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres-user:/data/postgres
    networks:
      parcelDelivery:

  postgres-order:
    container_name: postgres-order
    image: bitnami/postgresql:14.3.0
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=admin
      - POSTGRES_DB=auction
      - TZ=GMT+2
      - PGTZ=GMT+2
    #      - PGDATA=/data/postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres-order:/data/postgres
    networks:
      parcelDelivery:

  postgres-courier:
    container_name: postgres-courier
    image: bitnami/postgresql:14.3.0
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=admin
      - POSTGRES_DB=auction
      - TZ=GMT+2
      - PGTZ=GMT+2
    #      - PGDATA=/data/postgres
    ports:
      - "5435:5432"
    volumes:
      - postgres-courier:/data/postgres
    networks:
      parcelDelivery:

  admin-service:
    container_name: admin-service
    depends_on:
      - kafka
      - postgres-admin
    build:
      context: ..\adminservice
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    networks:
      parcelDelivery:

  courier-service:
    container_name: courier-service
    depends_on:
      - kafka
      - postgres-courier
    build:
      context: ..\courierservice
      dockerfile: Dockerfile
    ports:
      - "8002:8001"
    networks:
      parcelDelivery:
